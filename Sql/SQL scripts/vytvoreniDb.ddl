-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-11-27 20:38:44 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE adresy (
    idadresy                  NUMBER NOT NULL,
    mesto                     VARCHAR2(32) NOT NULL,
    ulice                     VARCHAR2(32),
    prodejny_idprodejny       NUMBER,
    zamestnanci_idzamestnance NUMBER
);

ALTER TABLE adresy
    ADD CONSTRAINT fkarc_3 CHECK ( ( ( zamestnanci_idzamestnance IS NOT NULL )
                                     AND ( prodejny_idprodejny IS NULL ) )
                                   OR ( ( prodejny_idprodejny IS NOT NULL )
                                        AND ( zamestnanci_idzamestnance IS NULL ) )
                                   OR ( ( zamestnanci_idzamestnance IS NULL )
                                        AND ( prodejny_idprodejny IS NULL ) ) );

ALTER TABLE adresy ADD CONSTRAINT adresa_pk PRIMARY KEY ( idadresy );

CREATE TABLE autuzivatel_role (
    role_idrole          NUMBER NOT NULL,
    autuzivatele_idautuz NUMBER NOT NULL
);

ALTER TABLE autuzivatel_role ADD CONSTRAINT autuzivatel_role_pk PRIMARY KEY ( role_idrole,
                                                                              autuzivatele_idautuz );

CREATE TABLE autuzivatele (
    idautuz                   NUMBER NOT NULL,
    jmeno                     VARCHAR2(20) NOT NULL,
    heslohash                 VARCHAR2(64) NOT NULL,
    heslosalt                 VARCHAR2(24) NOT NULL,
    zamestnanci_idzamestnance NUMBER NOT NULL
);

CREATE UNIQUE INDEX autuzivatel__idx ON
    autuzivatele (
        zamestnanci_idzamestnance
    ASC );

ALTER TABLE autuzivatele ADD CONSTRAINT autuzivatele_pk PRIMARY KEY ( idautuz );

CREATE TABLE hotove (
    idplatby NUMBER NOT NULL,
    vraceno  NUMBER NOT NULL
);

ALTER TABLE hotove ADD CONSTRAINT hotove_pk PRIMARY KEY ( idplatby );

CREATE TABLE karty (
    idplatby       NUMBER NOT NULL,
    cislokarty     NUMBER NOT NULL,
    autorizacnikod NUMBER NOT NULL
);

ALTER TABLE karty ADD CONSTRAINT karta_pk PRIMARY KEY ( idplatby );

CREATE TABLE kategorije (
    idkategorije NUMBER NOT NULL,
    nazev        VARCHAR2(32) NOT NULL
);

ALTER TABLE kategorije ADD CONSTRAINT kategorije_pk PRIMARY KEY ( idkategorije );

CREATE TABLE kupony (
    idplatby NUMBER NOT NULL,
    cislo    NUMBER NOT NULL
);

ALTER TABLE kupony ADD CONSTRAINT kupon_pk PRIMARY KEY ( idplatby );

CREATE TABLE logy (
    idlogu   NUMBER NOT NULL,
    tabulka  VARCHAR2(30) NOT NULL,
    operace  VARCHAR2(400) NOT NULL,
    cas      DATE NOT NULL,
    uzivatel VARCHAR2(20) NOT NULL,
    zmeny VARCHAR2(4000) NOT NULL
);

ALTER TABLE logy ADD CONSTRAINT log_pk PRIMARY KEY ( idlogu );

CREATE TABLE platby (
    idplatby    NUMBER NOT NULL,
    jeclubcarta NUMBER(1) NOT NULL,
    platba_type VARCHAR2(6) NOT NULL
);

ALTER TABLE platby
    ADD CHECK ( jeclubcarta IN ( 0, 1 ) );

ALTER TABLE platby
    ADD CONSTRAINT ch_inh_platba CHECK ( platba_type IN ( 'HOTOVE', 'KARTA', 'KUPON', 'PLATBA' ) );

ALTER TABLE platby ADD CONSTRAINT platby_pk PRIMARY KEY ( idplatby );

CREATE TABLE pokladny (
    idpokladny          NUMBER NOT NULL,
    prodejny_idprodejny NUMBER,
    cislo               NUMBER NOT NULL,
    jesamoobsluzna      NUMBER(1) NOT NULL
);

ALTER TABLE pokladny
    ADD CHECK ( jesamoobsluzna IN ( 0, 1 ) );

ALTER TABLE pokladny ADD CONSTRAINT pokladny_pk PRIMARY KEY ( idpokladny );

CREATE TABLE pozice (
    idpozice NUMBER NOT NULL,
    nazev    VARCHAR2(32) NOT NULL,
    mzda     NUMBER NOT NULL
);

ALTER TABLE pozice ADD CONSTRAINT pozice_pk PRIMARY KEY ( idpozice );

CREATE TABLE prodane_zbozi (
    pocetzbozi        NUMBER NOT NULL,
    prodeje_idprodeje NUMBER NOT NULL,
    zbozi_idzbozi     NUMBER NOT NULL,
    prodejnicena      NUMBER NOT NULL
);

ALTER TABLE prodane_zbozi ADD CONSTRAINT prodane_zbozi_pk PRIMARY KEY ( prodeje_idprodeje,
                                                                        zbozi_idzbozi );

CREATE TABLE prodeje (
    idprodeje       NUMBER NOT NULL,
    datumprodeje    DATE NOT NULL,
    celkovacena     NUMBER NOT NULL,
    platba_idplatby NUMBER NOT NULL
);

CREATE UNIQUE INDEX prodej__idx ON
    prodeje (
        platba_idplatby
    ASC );

ALTER TABLE prodeje ADD CONSTRAINT prodeje_pk PRIMARY KEY ( idprodeje );

CREATE TABLE prodejny (
    idprodejny     NUMBER NOT NULL,
    kontaktnicislo VARCHAR2(32),
    plocha         NUMBER NOT NULL
);

ALTER TABLE prodejny ADD CONSTRAINT prodejny_pk PRIMARY KEY ( idprodejny );

CREATE TABLE pulty (
    idpultu             NUMBER NOT NULL,
    prodejny_idprodejny NUMBER,
    cislo               NUMBER NOT NULL,
    pocetpolicek        NUMBER NOT NULL
);

ALTER TABLE pulty ADD CONSTRAINT pulty_pk PRIMARY KEY ( idpultu );

CREATE TABLE role (
    idrole NUMBER NOT NULL,
    nazev  VARCHAR2(20) NOT NULL
);

ALTER TABLE role ADD CONSTRAINT role_pk PRIMARY KEY ( idrole );

CREATE TABLE sklady (
    idskladu            NUMBER NOT NULL,
    pocetpolicek        NUMBER NOT NULL,
    prodejny_idprodejny NUMBER NOT NULL
);

CREATE UNIQUE INDEX sklad__idx ON
    sklady (
        prodejny_idprodejny
    ASC );

ALTER TABLE sklady ADD CONSTRAINT sklady_pk PRIMARY KEY ( idskladu );

CREATE TABLE soubory (
    idsouboru            NUMBER NOT NULL,
    jmeno                VARCHAR2(60) NOT NULL,
    soubor               BLOB NOT NULL,
    pripona              VARCHAR2(10) NOT NULL,
    autuzivatele_idautuz NUMBER NOT NULL
);

CREATE UNIQUE INDEX soubor__idx ON
    soubory (
        autuzivatele_idautuz
    ASC );

ALTER TABLE soubory ADD CONSTRAINT soubor_pk PRIMARY KEY ( idsouboru );

CREATE TABLE zamestnanci (
    idzamestnance             NUMBER NOT NULL,
    pozice_idpozice           NUMBER NOT NULL,
    jmeno                     VARCHAR2(32) NOT NULL,
    prijmeni                  VARCHAR2(32),
    rodnecislo                VARCHAR2(32) NOT NULL,
    telefonnicislo            VARCHAR2(32) NOT NULL,
    prodejny_idprodejny       NUMBER NOT NULL,
    zamestnanci_idzamestnance NUMBER
);

ALTER TABLE zamestnanci ADD CONSTRAINT zamestnanci_pk PRIMARY KEY ( idzamestnance );

CREATE TABLE zbozi (
    idzbozi                 NUMBER NOT NULL,
    nazev                   VARCHAR2(32) NOT NULL,
    aktualnicena            NUMBER NOT NULL,
    cenazeclubcartou        NUMBER,
    kategorije_idkategorije NUMBER NOT NULL,
    hmotnost                NUMBER NOT NULL
);

ALTER TABLE zbozi ADD CONSTRAINT zbozi_pk PRIMARY KEY ( idzbozi );

CREATE TABLE zbozi_na_pulte (
    pulty_idpultu NUMBER NOT NULL,
    zbozi_idzbozi NUMBER NOT NULL,
    pocetzbozi    NUMBER NOT NULL
);

ALTER TABLE zbozi_na_pulte ADD CONSTRAINT zbozi_na_pulte_pk PRIMARY KEY ( pulty_idpultu,
                                                                          zbozi_idzbozi );

CREATE TABLE zbozi_na_sklade (
    pocetzbozi      NUMBER NOT NULL,
    sklady_idskladu NUMBER NOT NULL,
    zbozi_idzbozi   NUMBER NOT NULL
);

ALTER TABLE zbozi_na_sklade ADD CONSTRAINT zbozi_na_sklade_pk PRIMARY KEY ( zbozi_idzbozi,
                                                                            sklady_idskladu );

ALTER TABLE adresy
    ADD CONSTRAINT adresy_prodejny_fk FOREIGN KEY ( prodejny_idprodejny )
        REFERENCES prodejny ( idprodejny );

ALTER TABLE adresy
    ADD CONSTRAINT adresy_zamestnanci_fk FOREIGN KEY ( zamestnanci_idzamestnance )
        REFERENCES zamestnanci ( idzamestnance );

ALTER TABLE autuzivatel_role
    ADD CONSTRAINT autuzivatele_fk FOREIGN KEY ( autuzivatele_idautuz )
        REFERENCES autuzivatele ( idautuz );

ALTER TABLE autuzivatele
    ADD CONSTRAINT autuzivatele_zamestnanci_fk FOREIGN KEY ( zamestnanci_idzamestnance )
        REFERENCES zamestnanci ( idzamestnance );

ALTER TABLE hotove
    ADD CONSTRAINT hotove_platba_fk FOREIGN KEY ( idplatby )
        REFERENCES platby ( idplatby );

ALTER TABLE karty
    ADD CONSTRAINT karta_platba_fk FOREIGN KEY ( idplatby )
        REFERENCES platby ( idplatby );

ALTER TABLE kupony
    ADD CONSTRAINT kupon_platba_fk FOREIGN KEY ( idplatby )
        REFERENCES platby ( idplatby );

ALTER TABLE pokladny
    ADD CONSTRAINT pokladny_prodejny_fk FOREIGN KEY ( prodejny_idprodejny )
        REFERENCES prodejny ( idprodejny );

ALTER TABLE prodane_zbozi
    ADD CONSTRAINT prodane_zbozi_prodeje_fk FOREIGN KEY ( prodeje_idprodeje )
        REFERENCES prodeje ( idprodeje );

ALTER TABLE prodane_zbozi
    ADD CONSTRAINT prodane_zbozi_zbozi_fk FOREIGN KEY ( zbozi_idzbozi )
        REFERENCES zbozi ( idzbozi );

ALTER TABLE prodeje
    ADD CONSTRAINT prodej_platba_fk FOREIGN KEY ( platba_idplatby )
        REFERENCES platby ( idplatby );

ALTER TABLE pulty
    ADD CONSTRAINT pulty_prodejny_fk FOREIGN KEY ( prodejny_idprodejny )
        REFERENCES prodejny ( idprodejny );

ALTER TABLE autuzivatel_role
    ADD CONSTRAINT role_fk FOREIGN KEY ( role_idrole )
        REFERENCES role ( idrole );

ALTER TABLE sklady
    ADD CONSTRAINT sklady_prodejny_fk FOREIGN KEY ( prodejny_idprodejny )
        REFERENCES prodejny ( idprodejny );

ALTER TABLE soubory
    ADD CONSTRAINT soubory_autuzivatele_fk FOREIGN KEY ( autuzivatele_idautuz )
        REFERENCES autuzivatele ( idautuz );

ALTER TABLE zamestnanci
    ADD CONSTRAINT zamestnanci_pozice_fk FOREIGN KEY ( pozice_idpozice )
        REFERENCES pozice ( idpozice );

ALTER TABLE zamestnanci
    ADD CONSTRAINT zamestnanci_prodejny_fk FOREIGN KEY ( prodejny_idprodejny )
        REFERENCES prodejny ( idprodejny );

ALTER TABLE zamestnanci
    ADD CONSTRAINT zamestnanci_zamestnanci_fk FOREIGN KEY ( zamestnanci_idzamestnance )
        REFERENCES zamestnanci ( idzamestnance );

ALTER TABLE zbozi
    ADD CONSTRAINT zbozi_kategorije_fk FOREIGN KEY ( kategorije_idkategorije )
        REFERENCES kategorije ( idkategorije );

ALTER TABLE zbozi_na_pulte
    ADD CONSTRAINT zbozi_na_pulte_pulty_fk FOREIGN KEY ( pulty_idpultu )
        REFERENCES pulty ( idpultu );

ALTER TABLE zbozi_na_pulte
    ADD CONSTRAINT zbozi_na_pulte_zbozi_fk FOREIGN KEY ( zbozi_idzbozi )
        REFERENCES zbozi ( idzbozi );

ALTER TABLE zbozi_na_sklade
    ADD CONSTRAINT zbozi_na_sklade_sklady_fk FOREIGN KEY ( sklady_idskladu )
        REFERENCES sklady ( idskladu );

ALTER TABLE zbozi_na_sklade
    ADD CONSTRAINT zbozi_na_sklade_zbozi_fk FOREIGN KEY ( zbozi_idzbozi )
        REFERENCES zbozi ( idzbozi );

CREATE OR REPLACE TRIGGER arc_fkarc_2_kupony BEFORE
    INSERT OR UPDATE OF idplatby ON kupony
    FOR EACH ROW
DECLARE
    d VARCHAR2(6);
BEGIN
    SELECT
        a.platba_type
    INTO d
    FROM
        platby a
    WHERE
        a.idplatby = :new.idplatby;

    IF ( d IS NULL OR d <> 'KUPON' ) THEN
        raise_application_error(-20223, 'FK Kupon_PLATBA_FK in Table KUPONY violates Arc constraint on Table PLATBY - discriminator column PLATBA_TYPE doesn''t have value ''KUPON'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_hotove BEFORE
    INSERT OR UPDATE OF idplatby ON hotove
    FOR EACH ROW
DECLARE
    d VARCHAR2(6);
BEGIN
    SELECT
        a.platba_type
    INTO d
    FROM
        platby a
    WHERE
        a.idplatby = :new.idplatby;

    IF ( d IS NULL OR d <> 'HOTOVE' ) THEN
        raise_application_error(-20223, 'FK HOTOVE_PLATBA_FK in Table HOTOVE violates Arc constraint on Table PLATBY - discriminator column PLATBA_TYPE doesn''t have value ''HOTOVE'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_karty BEFORE
    INSERT OR UPDATE OF idplatby ON karty
    FOR EACH ROW
DECLARE
    d VARCHAR2(6);
BEGIN
    SELECT
        a.platba_type
    INTO d
    FROM
        platby a
    WHERE
        a.idplatby = :new.idplatby;

    IF ( d IS NULL OR d <> 'KARTA' ) THEN
        raise_application_error(-20223, 'FK KARTA_PLATBA_FK in Table KARTY violates Arc constraint on Table PLATBY - discriminator column PLATBA_TYPE doesn''t have value ''KARTA'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE SEQUENCE adresy_idadresy_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER adresy_idadresy_trg BEFORE
    INSERT ON adresy
    FOR EACH ROW
    WHEN ( new.idadresy IS NULL )
BEGIN
    :new.idadresy := adresy_idadresy_seq.nextval;
END;
/

CREATE SEQUENCE autuzivatele_idautuz_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER autuzivatele_idautuz_trg BEFORE
    INSERT ON autuzivatele
    FOR EACH ROW
    WHEN ( new.idautuz IS NULL )
BEGIN
    :new.idautuz := autuzivatele_idautuz_seq.nextval;
END;
/

CREATE SEQUENCE karty_idplatby_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER karty_idplatby_trg BEFORE
    INSERT ON karty
    FOR EACH ROW
    WHEN ( new.idplatby IS NULL )
BEGIN
    :new.idplatby := karty_idplatby_seq.nextval;
END;
/

CREATE SEQUENCE kategorije_idkategorije_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER kategorije_idkategorije_trg BEFORE
    INSERT ON kategorije
    FOR EACH ROW
    WHEN ( new.idkategorije IS NULL )
BEGIN
    :new.idkategorije := kategorije_idkategorije_seq.nextval;
END;
/

CREATE SEQUENCE logy_idlogu_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER logy_idlogu_trg BEFORE
    INSERT ON logy
    FOR EACH ROW
    WHEN ( new.idlogu IS NULL )
BEGIN
    :new.idlogu := logy_idlogu_seq.nextval;
END;
/

CREATE SEQUENCE platby_idplatby_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER platby_idplatby_trg BEFORE
    INSERT ON platby
    FOR EACH ROW
    WHEN ( new.idplatby IS NULL )
BEGIN
    :new.idplatby := platby_idplatby_seq.nextval;
END;
/

CREATE SEQUENCE pokladny_idpokladny_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER pokladny_idpokladny_trg BEFORE
    INSERT ON pokladny
    FOR EACH ROW
    WHEN ( new.idpokladny IS NULL )
BEGIN
    :new.idpokladny := pokladny_idpokladny_seq.nextval;
END;
/

CREATE SEQUENCE pozice_idpozice_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER pozice_idpozice_trg BEFORE
    INSERT ON pozice
    FOR EACH ROW
    WHEN ( new.idpozice IS NULL )
BEGIN
    :new.idpozice := pozice_idpozice_seq.nextval;
END;
/

CREATE SEQUENCE prodeje_idprodeje_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER prodeje_idprodeje_trg BEFORE
    INSERT ON prodeje
    FOR EACH ROW
    WHEN ( new.idprodeje IS NULL )
BEGIN
    :new.idprodeje := prodeje_idprodeje_seq.nextval;
END;
/

CREATE SEQUENCE prodejny_idprodejny_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER prodejny_idprodejny_trg BEFORE
    INSERT ON prodejny
    FOR EACH ROW
    WHEN ( new.idprodejny IS NULL )
BEGIN
    :new.idprodejny := prodejny_idprodejny_seq.nextval;
END;
/

CREATE SEQUENCE pulty_idpultu_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER pulty_idpultu_trg BEFORE
    INSERT ON pulty
    FOR EACH ROW
    WHEN ( new.idpultu IS NULL )
BEGIN
    :new.idpultu := pulty_idpultu_seq.nextval;
END;
/

CREATE SEQUENCE role_idrole_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER role_idrole_trg BEFORE
    INSERT ON role
    FOR EACH ROW
    WHEN ( new.idrole IS NULL )
BEGIN
    :new.idrole := role_idrole_seq.nextval;
END;
/

CREATE SEQUENCE sklady_idskladu_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER sklady_idskladu_trg BEFORE
    INSERT ON sklady
    FOR EACH ROW
    WHEN ( new.idskladu IS NULL )
BEGIN
    :new.idskladu := sklady_idskladu_seq.nextval;
END;
/

CREATE SEQUENCE soubory_idsouboru_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER soubory_idsouboru_trg BEFORE
    INSERT ON soubory
    FOR EACH ROW
    WHEN ( new.idsouboru IS NULL )
BEGIN
    :new.idsouboru := soubory_idsouboru_seq.nextval;
END;
/

CREATE SEQUENCE zamestnanci_idzamestnance_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zamestnanci_idzamestnance_trg BEFORE
    INSERT ON zamestnanci
    FOR EACH ROW
    WHEN ( new.idzamestnance IS NULL )
BEGIN
    :new.idzamestnance := zamestnanci_idzamestnance_seq.nextval;
END;
/

CREATE SEQUENCE zbozi_idzbozi_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zbozi_idzbozi_trg BEFORE
    INSERT ON zbozi
    FOR EACH ROW
    WHEN ( new.idzbozi IS NULL )
BEGIN
    :new.idzbozi := zbozi_idzbozi_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            22
-- CREATE INDEX                             4
-- ALTER TABLE                             49
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          19
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         16
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
